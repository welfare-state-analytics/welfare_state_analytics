[tool]
[tool.poetry]
name = "humlab-westac"
version = "0.5.8"
description = "Welfare State Analytics"
authors = ["Roger MÃ¤hler <roger.mahler@hotmail.com>"]
packages = [
    { include = "notebooks" }
]
classifiers = [
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Topic :: Software Development',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://westac.se"
repository = "https://github.com/welfare-state-analytics/welfare_state_analytics"

# FIXME: #137 Remove redundant dependencies
[tool.poetry.dependencies]
bokeh = "*"
click = "*"
gensim = "*"
holoviews = "*"
matplotlib = "*"
nltk = "*"
pandas = "*"
pandas-bokeh = "*"
python = "==3.8.*"
scikit-learn = "*"
scipy = "*"
sklearn = "*"
textacy = "==0.10.1"
tqdm = "*"
loguru = "^0.5.3"
jupyter-bokeh = "*"
jupyterlab = "*"
ipywidgets = "*"
msgpack = "^1.0.2"
humlab-penelope = "^0.5.20"

[tool.poetry.dev-dependencies]
black = "==20.*,>=20.8.0.b1"
coverage = "*"
flake8 = "==3.*,>=3.8.4"
flake8-black = "==0.*,>=0.2.1"
flake8-pytest-style = "==1.*,>=1.3.0"
invoke = "*"
isort = "==5.*,>=5.5.4"
mypy = "==0.*,>=0.782.0"
nbstripout = "*"
pep8-naming = "==0.*,>=0.11.1"
pre-commit = "*"
pycodestyle = "==2.*,>=2.6.0"
pyflakes = "==2.*,>=2.2.0"
pylint = "*"
pytest = "*"
pytest-cov = "==2.*,>=2.10.1"
rope = "*"
yapf = "==0.*,>=0.30.0"
debugpy = "==1.*,>=1.2.1"
pyinstrument = "==3.*,>=3.4.1"
jupytext = "==1.*,>=1.11.1"
xeus-python = "^0.12.4"
tomlkit = "^0.7.2"
jupyterlite = "^0.1.0-alpha.6"
pyright = "^0.0.9"

[tool.poetry.scripts]
# vectorize_corpus = "penelope.scripts.vectorize_corpus:main"
# compute_topic_model = "penelope.scripts.compute_topic_model:main"





[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-rfE",
    "-q",
    # "-s",
]
log_cli = "False"
testpaths = [
    "tests",
]
norecursedirs = ['notebooks', '.git', 'data', "test_data", 'output', 'deprecated', '__pycache__', 'tmp']
python_files = "*_test.py"
python_functions = "test_*"
filterwarnings = [
  "ignore::_pytest.warning_types.PytestCollectionWarning",
  "ignore::DeprecationWarning",
  "ignore::PendingDeprecationWarning",
  "ignore::RuntimeWarning",
  "ignore::UserWarning"
]
markers = [
    "long_running: takes time to run",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetry", path = "pyproject.toml"}

[tool.black]
line-length = 120
target-version = ["py38"]
skip-string-normalization = true
# include = '\.pyi?$'
exclude = '''
(
  \.git
  | \.pypy_cache
  | \.pytest_cache
  | \.ipynb_checkpoints
  | deprecated
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = [ "notebooks", "westac", "tests" ]
known_first_party = [ "__paths__" ]

[tool.coverage]
# https://github.com/nedbat/coveragepy

[tool.coverage.run]
source = ["notebooks", "westac"]
branch = true
omit = [
    '**/__init__.py',
    '**/__paths__.py',
    'notebooks/legacy/**/*.py',
    'notebooks/co_occurrence/co_occurrence_trends.py',
    'notebooks/pos_statistics/pos_statistics.py',
    'notebooks/word_trends/word_trends.py'
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError"
]
show_missing = true
sort = "Name"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

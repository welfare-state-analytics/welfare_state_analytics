[tool]
[tool.poetry]
name = "humlab-westac"
version = "0.5.32"
description = "Welfare State Analytics"
authors = ["Roger MÃ¤hler <roger.mahler@hotmail.com>"]
packages = [{ include = "notebooks" }]
classifiers = [
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Topic :: Software Development',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://westac.se"
repository = "https://github.com/welfare-state-analytics/welfare_state_analytics"

# FIXME: #137 Remove redundant dependencies
[tool.poetry.dependencies]
bokeh = "*"
click = "*"
ipywidgets = "*"
jupyterlab = "*"
loguru = "^0.5.3"
matplotlib = "*"
msgpack = "^1.0.2"
nltk = "*"
pandas = "*"
pandas-bokeh = "*"
python = "==3.9.*"
scikit-learn = "*"
scipy = "*"
sklearn = "*"
tqdm = "*"
ipydatagrid = "^1.1.8"
bqplot = "^0.12.32"
PyGithub = "^1.55"
plotly = "^5.5.0"
bar-chart-race = "^0.1.0"
humlab-penelope = {extras = ["full"], version = "^0.7.15"}

[tool.poetry.dev-dependencies]
black = "*"
coverage = "*"
flake8 = "*"
flake8-pytest-style = "*"
invoke = "*"
isort = "*"
mypy = "*"
nbstripout = "*"
pep8-naming = "*"
pre-commit = "*"
pycodestyle = "*"
pyflakes = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
rope = "*"
yapf = "*"
debugpy = "*"
pyinstrument = "*"
jupytext = "*"
xeus-python = "*"
tomlkit = "*"
jupyterlite = "*"
pyright = "*"

[tool.poetry.scripts]
parlaclarin-vectorize = "scripts.riksdagens_protokoll.parlaclarin.vectorize.py:process"
# compute_topic_model = "penelope.scripts.compute_topic_model:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-rfE",
    "-q",
    # "-s",
]
log_cli = "False"
testpaths = ["tests"]
norecursedirs = [
    'notebooks',
    '.git',
    'data',
    "test_data",
    'output',
    'deprecated',
    '__pycache__',
    'tmp',
]
python_files = "*_test.py"
python_functions = "test_*"
filterwarnings = [
    "ignore::_pytest.warning_types.PytestCollectionWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::RuntimeWarning",
    "ignore::UserWarning",
]
markers = [
    "long_running: takes time to run",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.dephell.main]
from = { format = "poetry", path = "pyproject.toml" }
to = { format = "poetry", path = "pyproject.toml" }

[tool.black]
line-length = 120
target-version = ["py39"]
skip-string-normalization = true
# include = '\.pyi?$'
exclude = '''
(
  \.git
  | \.pypy_cache
  | \.pytest_cache
  | \.ipynb_checkpoints
  | deprecated
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = ["notebooks", "westac", "tests", "scripts"]
extra_standard_library = ["__paths__"]

[tool.coverage]
# https://github.com/nedbat/coveragepy

[tool.coverage.run]
source = ["notebooks", "westac"]
branch = true
omit = [
    '**/__init__.py',
    '**/__paths__.py',
]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]
show_missing = true
sort = "Name"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
